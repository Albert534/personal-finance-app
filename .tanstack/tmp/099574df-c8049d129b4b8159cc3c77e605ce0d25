/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TotalRouteImport } from './routes/total'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'

const UsagesLazyRouteImport = createFileRoute('/usages')()
const PercentagesLazyRouteImport = createFileRoute('/percentages')()
const ForgotPasswordLazyRouteImport = createFileRoute('/forgotPassword')()

const UsagesLazyRoute = UsagesLazyRouteImport.update({
  id: '/usages',
  path: '/usages',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/usages.lazy').then((d) => d.Route))
const PercentagesLazyRoute = PercentagesLazyRouteImport.update({
  id: '/percentages',
  path: '/percentages',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/percentages.lazy').then((d) => d.Route))
const ForgotPasswordLazyRoute = ForgotPasswordLazyRouteImport.update({
  id: '/forgotPassword',
  path: '/forgotPassword',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/forgotPassword.lazy').then((d) => d.Route),
)
const TotalRoute = TotalRouteImport.update({
  id: '/total',
  path: '/total',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/total': typeof TotalRoute
  '/forgotPassword': typeof ForgotPasswordLazyRoute
  '/percentages': typeof PercentagesLazyRoute
  '/usages': typeof UsagesLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/total': typeof TotalRoute
  '/forgotPassword': typeof ForgotPasswordLazyRoute
  '/percentages': typeof PercentagesLazyRoute
  '/usages': typeof UsagesLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/total': typeof TotalRoute
  '/forgotPassword': typeof ForgotPasswordLazyRoute
  '/percentages': typeof PercentagesLazyRoute
  '/usages': typeof UsagesLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/total'
    | '/forgotPassword'
    | '/percentages'
    | '/usages'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/total'
    | '/forgotPassword'
    | '/percentages'
    | '/usages'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/total'
    | '/forgotPassword'
    | '/percentages'
    | '/usages'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  TotalRoute: typeof TotalRoute
  ForgotPasswordLazyRoute: typeof ForgotPasswordLazyRoute
  PercentagesLazyRoute: typeof PercentagesLazyRoute
  UsagesLazyRoute: typeof UsagesLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/usages': {
      id: '/usages'
      path: '/usages'
      fullPath: '/usages'
      preLoaderRoute: typeof UsagesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/percentages': {
      id: '/percentages'
      path: '/percentages'
      fullPath: '/percentages'
      preLoaderRoute: typeof PercentagesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgotPassword': {
      id: '/forgotPassword'
      path: '/forgotPassword'
      fullPath: '/forgotPassword'
      preLoaderRoute: typeof ForgotPasswordLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/total': {
      id: '/total'
      path: '/total'
      fullPath: '/total'
      preLoaderRoute: typeof TotalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  TotalRoute: TotalRoute,
  ForgotPasswordLazyRoute: ForgotPasswordLazyRoute,
  PercentagesLazyRoute: PercentagesLazyRoute,
  UsagesLazyRoute: UsagesLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
